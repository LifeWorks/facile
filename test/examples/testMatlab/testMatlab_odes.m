% File generated by Facile version 0.53
%
function dydt = testMatlab_odes(t, y)

persistent last_tick

if (isempty(last_tick))
  last_tick = 0;
  tic;
end

if (t - last_tick > 1.0)
  str = sprintf('sim time is t=%f, elapsed time=%f', t, toc);
  disp (str)
  last_tick = t;
end

% state vector to node mapping
S0 = y(1);
S1 = y(2);
A = y(3);
B = y(4);
C = y(5);
D = y(6);
X = y(7);
Y = y(8);
W = y(9);
Z = y(10);
E = y(11);
F = y(12);
G = y(13);
M1 = y(14);
M2 = y(15);

% constants and constant expressions
global ode_rate_constants;
sourceS0f = ode_rate_constants(1);
fa0 = ode_rate_constants(2);
fb0 = ode_rate_constants(3);
b1 = ode_rate_constants(4);
f1 = ode_rate_constants(5);
f2 = ode_rate_constants(6);
b2 = ode_rate_constants(7);
sinkCf = ode_rate_constants(8);
sourceXb = ode_rate_constants(9);
sourceXf = ode_rate_constants(10);
sinkYb = ode_rate_constants(11);
sinkYf = ode_rate_constants(12);
sinkZb = ode_rate_constants(13);
sinkZf = ode_rate_constants(14);
gg = ode_rate_constants(15);
hh = ode_rate_constants(16);
ii = ode_rate_constants(17);
m1 = ode_rate_constants(18);
m2 = ode_rate_constants(19);
v2 = ode_rate_constants(20);
ff = ode_rate_constants(21);
v1 = ode_rate_constants(22);
v3 = ode_rate_constants(23);



% dynamic rate expressions
func1 = 0.5*(square(2*pi*t/0.2) + 1);
func2 = 0.5*(square(2*pi*t/0.2) + 1);
sourceWb = cos(t);
sourceWf = sin(2*pi*t/0.1);

% differential equations for independent species
dydt(size(y,1),1) = 0;
dydt(1)= + sourceS0f - fa0*S0 - fa0*S0 ;
dydt(2)= + func1 - fb0*S1 ;
dydt(3)= + fa0*S0 + fa0*S0 + b2*D - f1*A*B - f2*A*B ;
dydt(4)= + fb0*S1 + b2*D - f1*A*B - f2*A*B ;
dydt(5)= + f1*A*B - sinkCf*C ;
dydt(6)= + f2*A*B + func2 - b2*D ;
dydt(7)= + sourceXf ;
dydt(8)= - sinkYf*Y ;
dydt(9)= + sourceWf ;
dydt(10)= - sinkZf*Z ;
dydt(11)= - ff*E - gg*E ;
dydt(12)= + ff*E + ii*G - hh*F ;
dydt(13)= + gg*E + hh*F - ii*G ;
dydt(14)= + m2*M2 - m1*M1 ;
dydt(15)= + m1*M1 - m2*M2 ;


